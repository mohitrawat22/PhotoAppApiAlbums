# port which is used to access this service
server.port=8012

# name of the application
spring.application.name=PhotoAppApiConfigServer

# Git URL
spring.cloud.config.server.git.uri=https://github.com/mohitrawat22/PhotoAppConfiguration

# Git username and password
spring.cloud.config.server.git.username=mohitrawat22
spring.cloud.config.server.git.password=Morgit199@

# If you are planning to use multiple config server instances pointing to the same config repository,
# you can configure the server to clone your repo into a local temporary folder.
# But be aware of private repositories with two-factor authentication,
# they are difficult to handle!
# In such a case, it is easier to clone them on your local filesystem and work with the copy.
spring.cloud.config.server.git.clone-on-start=true
spring.cloud.config.server.git.default-label=main

# We can set profile as native and use specific file for native profile
# spring.profiles.active=native
# spring.cloud.config.server.native.searchLocations=file:///D:/Mohit/Intellij/Workspace/PropertiesBackend
